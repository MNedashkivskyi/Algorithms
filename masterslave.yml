- name: Master
  hosts: "{{ master_name }}"
  vars:
        master_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
        slave_ip: "{{ hostvars[slave_name]['networkInterfaces'][0]['networkIP'] }}"
        petclinic_user_ip: localhost
        mysql_root_password: password
        slave_password: slave_password
  tasks:
    - name: Get update
      ansible.builtin.shell:
        cmd: apt-get update
    - name: Install pip
      apt:
        name: python3-pip
        update_cache: yes
        state: present
    - name: Install python
      pip:
        name:
          - PyMySQL
        state: present
        executable: pip3
    - name: Install MYSQL Server
      apt: name="{{ item }}" update_cache=yes cache_valid_time=3600 state=present
      with_items: 
      - mysql-server
    - name: Bind address changing (mysqld.cnf)
      ansible.builtin.shell:
        cmd: sed -i "s|bind-address.*|bind-address = {{ MYSQL_MASTER_IP }}|" /etc/mysql/mysql.conf.d/mysqld.cnf
    - name: Log_bin (mysqld.cnf)
      ansible.builtin.shell:
        cmd: sed -i 's/^#\s*log_bin\s*=\s*\/var\/log\/mysql\/mysql-bin\.log$/log_bin=\/var\/log\/mysql\/mysql-bin.log/g' /etc/mysql/mysql.conf.d/mysqld.cnf
    - name: Binlog_do_db (mysqld.cnf)
      ansible.builtin.shell:
        cmd: sed -i 's/^#\s*binlog_do_db\s*=\s*include_database_name$/binlog_do_db=petclinic/g' /etc/mysql/mysql.conf.d/mysqld.cnf
    - name: Server ID changing (mysqld.cnf)
      ansible.builtin.shell: 
        cmd:  sed -i 's/^#\s*server-id\s*=\s*1$/server-id=1/g' /etc/mysql/mysql.conf.d/mysqld.cnf
    - name: Restart the MySQL service
      service: 
        name: mysql
        enabled: yes
        state: restarted
    - name: Create petclinic user
      mysql_user: 
        name: pc
        password: petclinic
        host: "{{ petclinic_user_ip }}"
        priv: "*.*:ALL, GRANT"
        state: present
    - name: Create slave user
      mysql_user: 
        name: slave
        password: slave_password
        host: "{{ slave_ip }}"
        priv: "*.*:REPLICATION SLAVE"
        state: present
    - name: Reload privilege tables
      command: mysql --user=slave --password='{{ slave_password }}' mysql --execute="FLUSH PRIVILEGES";
      changed_when: False
    - name: Clone a repo spring-petclinic-microservices
      ansible.builtin.git: 
        repo: https://github.com/spring-petclinic/spring-petclinic-rest.git
        dest: ./wus/spring-petclinic-rest
        clone: yes
        update: yes
      become: no
    - name: Dump db
      ansible.builtin.shell: mysqldump -u root petclinic > ./wus/petclinic.sql
    - name: Final database setup
      command: mysql 
                --execute="USE petclinic;
                UNLOCK TABLES;
                SET @@GLOBAL.ENFORCE_GTID_CONSISTENCY = WARN;
                SET @@GLOBAL.ENFORCE_GTID_CONSISTENCY = ON;
                SET @@GLOBAL.GTID_MODE = OFF_PERMISSIVE;
                SET @@GLOBAL.GTID_MODE = ON_PERMISSIVE;
                SET @@GLOBAL.GTID_MODE = ON;"

    - name: copy database file
       run_once: yes
       become: yes
       fetch:     
         src: ./wus/petclinic.sql
         dest: "~/petclinic/"
         flat: yes
   
   
     
     
